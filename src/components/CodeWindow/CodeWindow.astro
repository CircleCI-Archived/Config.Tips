---
import { Tooltips } from 'astro-tooltips';
// Based on https://github.com/withastro/astro/blob/main/packages/astro/components/Code.astro
import Icon from "astro-icon";
import { nanoid } from 'nanoid'
import * as shiki from "shiki";
type Props = {
  snippet: string;
  lang: shiki.Lang;
  filePath?: string;
};
const { snippet, lang, filePath = "unknown" } = Astro.props;

const safeSnippet = encodeURIComponent(snippet);
const codeId = `C${nanoid(5)}`;

const highlighter = await shiki.getHighlighter({
  theme: "github-dark-dimmed",
  langs: [lang],
});

const tokens = highlighter.codeToThemedTokens(snippet, lang);
const _theme = highlighter.getTheme();
const html = shiki.renderToHtml(tokens, {
  themeName: _theme.name,
  fg: _theme.fg,
  bg: "transparent",
  elements: {
    pre({ className, children }) {
      // Swap to `code` tag if inline
      // Replace "shiki" class naming with "astro-code"
      className = className.replace(/shiki/g, "code-window");
      return `<pre class="${className} px-2 break-words" tabindex="0">${children}</pre>`;
    },
    code({ children }) {
      return `<code id="${codeId}-code" data-rawSnippet="${safeSnippet}">${children}</code>`;
    },
  },
});
---

<div
  class="flex flex-col rounded-md border border-indigo-300 shadow-md w-full"
  role="region"
  aria-labelledby="filename"
>
  <div
    class="flex justify-between mr-2 bg-slate-950 rounded-t-md overflow-x-auto"
  >
    <span class="p-2 bg-gray-800 rounded-t-sm" id="filename" role="presentation"
      >{filePath}</span
    >
    <div class="flex items-center">
      <div class="flex bg-gray-700 rounded-sm border border-indigo-300">
        <button
          class="p-1.5 hover:bg-indigo-300"
          aria-label="Copy to clipboard"
          id={`${codeId}-button`}
          title="Copied!"
        >
          <Icon name="mdi:content-copy" class="w-4 h-4" aria-hidden="true" />
          <Tooltips interactive={false} delay={[15, 100]} trigger="click" placement='top'/>
        </button>
      </div>
    </div>
  </div>
  <div class="overflow-auto w-full h-full bg-gray-800 rounded-b-md">
    <Fragment set:html={html} />
  </div>
</div>

<script define:vars={{ codeId }}>
 const copyButton = document.querySelector(`#${codeId}-button`);
 copyButton.addEventListener("click", (event) => {
    const code = document.querySelector(`#${codeId}-code`);
    const rawSnippet = code.dataset.rawsnippet;
    navigator.clipboard.writeText(decodeURIComponent(rawSnippet));
 });
</script>
