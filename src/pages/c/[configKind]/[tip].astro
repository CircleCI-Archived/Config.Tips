---
import type { InferGetStaticPropsType } from 'astro';
import {marked} from 'marked';
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import CodeWindow from '../../../components/CodeWindow/CodeWindow.astro';

export async function getStaticPaths() {
  const configKinds = await getCollection("configKinds");
  const tips = await getCollection("tips");
  return tips.map(tip => {
    const configKind = configKinds.find(kind => kind.id === tip.data.kind.id)
    if (!configKind) {
      throw new Error(`Config kind not found for tip ${tip.id}`)
    }
    return {
      params: {
        configKind: configKind.id,
        tip: tip.slug
      },
      props: {
        configType: configKind.data,
        title: tip.data.title,
        description: tip.data.description,
        body: marked(tip.body),
        snippet: tip.data.snippet,
        lang: configKind.data.snippet.lang,
        slug: tip.slug,
      }
    }
  })
}
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { configType, title, description, body, snippet, lang, slug } = Astro.props;
---
<Layout title={`Config.Tips - ${configType.name}: ${title}`} slug={slug} description={description}>
		<div class="flex flex-col flex-wrap md:flex-row gap-4">
      <div class="flex-1">
        <h1 class="text-3xl font-bold">{title}</h1>
        <article set:html={body} />
      </div>
      <div class="flex md:w-1/2">
        <CodeWindow snippet={snippet} lang={lang} filePath={configType.snippet.filePath} />
      </div>
    </div>
</Layout>